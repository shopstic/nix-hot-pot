name: Build
on: [push]
jobs:
  build-images:
    runs-on: [self-hosted, nix, "${{ matrix.arch.runner }}-linux", medium]
    env:
      IMAGE_REPOSITORY: public.ecr.aws/shopstic
    strategy:
      matrix:
        arch:
          - nix: x86_64
            runner: amd64
          - nix: aarch64
            runner: arm64
    steps:
      - uses: actions/checkout@v3

      - name: Build all images
        shell: nix develop -v -c bash {0}
        run: |
          ./cli.sh build_all_images ${{ matrix.arch.nix }}

  push-images:
    runs-on: [self-hosted, nix, "${{ matrix.arch }}-linux", medium]
    needs: [build-images]
    env:
      IMAGE_REPOSITORY: public.ecr.aws/shopstic
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v3

      - name: Login
        shell: nix develop -v -c bash {0}
        run: |-
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "${IMAGE_REPOSITORY}"

      - name: Build and push images
        shell: nix develop -v -c bash {0}
        run: |
          ./cli.sh push_all_single_arch_images ${{ matrix.arch }}

  push-manifests:
    runs-on: [self-hosted, nix, arm64-linux, small]
    needs: [push-images]
    env:
      IMAGE_REPOSITORY: public.ecr.aws/shopstic
    steps:
      - uses: actions/checkout@v3

      - name: Login
        shell: nix develop -v -c bash {0}
        run: |-
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin "${IMAGE_REPOSITORY}"

      - name: Build and push images
        shell: nix develop -v -c bash {0}
        run: |
          ./cli.sh push_all_manifests

  build-packages:
    runs-on:
      [
        self-hosted,
        nix,
        "${{ matrix.runner.runner }}",
        "${{ matrix.runner.size }}",
      ]
    strategy:
      matrix:
        runner:
          - arch: x86_64-linux
            runner: amd64-linux
            size: medium
          - arch: aarch64-linux
            runner: arm64-linux
            size: medium
          - arch: aarch64-darwin
            runner: arm64-darwin
            size: small
    steps:
      - uses: actions/checkout@v3

      - name: Test
        run: |
          cd ./tests
          nix build -L -v --no-link '.#defaultPackage.${{ matrix.runner.arch }}'

      - name: Build all packages
        run: nix build -L -v '.#defaultPackage.${{ matrix.runner.arch }}'

      - name: Cache all packages
        env:
          NIX_OUTPUT: .#defaultPackage.${{ matrix.runner.arch }}
        run: |
          nix store sign "${NIX_OUTPUT}" -v -r -k ~/.secrets/nix-cache-private-key
          nix copy -v "${NIX_OUTPUT}" --to s3://nixed/cache
