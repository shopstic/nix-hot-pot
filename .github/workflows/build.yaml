name: Build
on: [push]
env:
  IMAGE_REPOSITORY: ${{ vars.IMAGE_REPOSITORY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.NIX_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.NIX_AWS_SECRET_ACCESS_KEY }}
  NIX_CACHE_BUCKET_NAME: ${{ vars.NIX_CACHE_BUCKET_NAME }}
  NIX_CACHE_BUCKET_REGION: ${{ vars.NIX_CACHE_BUCKET_REGION }}
  NIX_CACHE_SIGNING_PRIVATE_KEY: ${{ secrets.NIX_CACHE_SIGNING_PRIVATE_KEY }}
jobs:
  build-packages:
    name: Build packages
    timeout-minutes: 30
    runs-on:
      - self-hosted
      - nix
      - general
      - ${{ matrix.runner.runner }}
      - ${{ matrix.runner.size }}
    strategy:
      fail-fast: false
      matrix:
        runner:
          - arch: x86_64-linux
            runner: amd64-linux
            size: medium
          - arch: aarch64-linux
            runner: arm64-linux
            size: medium
          - arch: aarch64-darwin
            runner: arm64-darwin
            size: small          
    steps:
      - uses: actions/checkout@v4

      - name: Build all packages
        shell: nix develop -v -c bash -euo pipefail {0}   
        run: |
          ./cli.sh fn_nix_build -L '.#defaultPackage.${{ matrix.runner.arch }}'

      - name: Cache all packages
        env:
          NIX_OUTPUT: .#defaultPackage.${{ matrix.runner.arch }}
        run: |
          nix store sign "${NIX_OUTPUT}" -v -r -k <(echo -n "${NIX_CACHE_SIGNING_PRIVATE_KEY}")
          nix copy -v --to "s3://${NIX_CACHE_BUCKET_NAME}/cache?region=${NIX_CACHE_BUCKET_REGION}&compression=zstd&parallel-compression=true" "${NIX_OUTPUT}"

  build-push-images:
    name: Build and push images
    timeout-minutes: 20
    runs-on:
      - self-hosted
      - nix
      - general
      - ${{ matrix.imageArch }}-linux
      - medium
    environment: ${{ github.ref_name }}
    concurrency: ${{ github.ref_name }}-${{ matrix.imageArch }}
    needs: [build-packages]
    strategy:
      fail-fast: false
      matrix:
        imageArch: [amd64, arm64]
    defaults:
      run:
        shell: nix develop -v -c bash -euo pipefail {0}
    env:
      IMAGE_PUSH_SKIP_DIFFING: ${{ vars.IMAGE_PUSH_SKIP_DIFFING }}
    steps:
      - uses: actions/checkout@v4

      - name: Build all images
        run: |
          ./cli.sh fn_build_all_images ${{ matrix.imageArch }}

      - name: Push all images
        if: github.ref_name == 'main'
        run: |
          ./cli.sh fn_push_all_single_arch_images ${{ matrix.imageArch }}

  push-manifests:
    name: Build and push multi-arch manifests
    timeout-minutes: 20
    if: github.ref_name == 'main'
    needs: [build-push-images]
    environment: main
    concurrency: main
    runs-on: [self-hosted, nix, general, amd64-linux, small]
    defaults:
      run:
        shell: nix develop -v -c bash -euo pipefail {0}
    steps:
      - uses: actions/checkout@v4

      - name: Build and push images
        run: |
          ./cli.sh fn_push_all_manifests
