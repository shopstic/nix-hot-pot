name: Build
on: [push]
jobs:
  build-images:
    runs-on: [self-hosted, nix]
    env:
      IMAGE_REPOSITORY: public.ecr.aws/shopstic
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Create auth file
        id: registry-auth
        run: |-
          REGISTRY_AUTH_FILE="$(mktemp -d)/auth.json"
          echo "::set-output name=authFile::${REGISTRY_AUTH_FILE}"

      - name: Login
        shell: nix develop -v -c bash {0}
        env:
          REGISTRY_AUTH_FILE: ${{ steps.registry-auth.outputs.authFile }}
        run: |-
          aws ecr-public get-login-password | skopeo login --username AWS --password-stdin "${IMAGE_REPOSITORY}"

      - name: Build and push images
        shell: nix develop -v -c bash {0}
        env:
          REGISTRY_AUTH_FILE: ${{ steps.registry-auth.outputs.authFile }}
        run: |
          ./cli.sh build_push_images

  build-packages:
    runs-on: [self-hosted, nix]
    strategy:
      matrix:
        arch:
          - aarch64-linux
          - aarch64-darwin
          - x86_64-linux
          - x86_64-darwin
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Test
        run: |
          cd ./tests
          nix build -L -vv --no-link '.#defaultPackage.${{ matrix.arch }}'

      - name: Build all packages
        run: nix build -L -vv '.#defaultPackage.${{ matrix.arch }}'

      - name: Cache all packages
        env:
          NIX_OUTPUT: .#defaultPackage.${{ matrix.arch }}
        run: |
          nix store sign "${NIX_OUTPUT}" -v -r -k ~/.secrets/nix-cache-private-key
          nix copy -v "${NIX_OUTPUT}" --to s3://nixed/cache
