name: Build
on: [push]
jobs:
  build-packages:
    name: Build packages
    timeout-minutes: 30
    runs-on:
      - self-hosted
      - nix
      - general
      - ${{ matrix.runner.runner }}
      - ${{ matrix.runner.size }}
    strategy:
      fail-fast: false
      matrix:
        runner:
          - arch: x86_64-linux
            runner: amd64-linux
            size: medium
          - arch: aarch64-linux
            runner: arm64-linux
            size: medium
          - arch: aarch64-darwin
            runner: arm64-darwin
            size: small
    steps:
      - uses: actions/checkout@v4

      - name: Build all packages
        run: |
          nix build -L -v '.#defaultPackage.${{ matrix.runner.arch }}'

      - name: Cache all packages
        env:
          NIX_OUTPUT: .#defaultPackage.${{ matrix.runner.arch }}
        run: |
          NIX_CACHE_SIGNING_PRIVATE_KEY_PATH=${NIX_CACHE_SIGNING_PRIVATE_KEY_PATH:?"NIX_CACHE_SIGNING_PRIVATE_KEY_PATH env var is not set"}
          NIX_CACHE_BUCKET_NAME=${NIX_CACHE_BUCKET_NAME:?"NIX_CACHE_BUCKET_NAME env var is not set"}
          NIX_CACHE_BUCKET_REGION=${NIX_CACHE_BUCKET_REGION:?"NIX_CACHE_BUCKET_REGION env var is not set"}

          nix store sign "${NIX_OUTPUT}" -v -r -k "${NIX_CACHE_SIGNING_PRIVATE_KEY_PATH}"
          nix copy -v --to "s3://${NIX_CACHE_BUCKET_NAME}/cache?region=${NIX_CACHE_BUCKET_REGION}&compression=zstd&parallel-compression=true" "${NIX_OUTPUT}"

  build-images:
    name: Build images
    timeout-minutes: 20
    runs-on:
      - self-hosted
      - nix
      - general
      - ${{ matrix.imageArch }}-linux
      - medium
    needs: [build-packages]
    strategy:
      fail-fast: false
      matrix:
        imageArch: [amd64, arm64]
    defaults:
      run:
        shell: nix develop -c bash {0}
    steps:
      - uses: actions/checkout@v4

      - name: Build all images
        run: |
          ./cli.sh build_all_images ${{ matrix.imageArch }}

  push-images:
    name: Push images
    if: github.ref_name == 'main'
    needs: [build-images]
    timeout-minutes: 20
    environment: main
    concurrency: main
    runs-on:
      - self-hosted
      - nix
      - general
      - ${{ matrix.imageArch }}-linux
      - medium
    strategy:
      fail-fast: false
      matrix:
        imageArch: [amd64, arm64]
    defaults:
      run:
        shell: nix develop -c bash {0}
    steps:
      - uses: actions/checkout@v4

      - name: Push all images
        run: |
          ./cli.sh push_all_single_arch_images ${{ matrix.imageArch }}

  push-manifests:
    name: Build and push multi-arch manifests
    timeout-minutes: 20
    if: github.ref_name == 'main'
    needs: [push-images]
    environment: main
    concurrency: main
    runs-on: [self-hosted, nix, general, amd64-linux, small]
    defaults:
      run:
        shell: nix develop -c bash {0}
    steps:
      - uses: actions/checkout@v4

      - name: Build and push images
        run: |
          ./cli.sh push_all_manifests
